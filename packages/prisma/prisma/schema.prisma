generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
  NonBinary
  Other
  PreferNotToSay
}

enum ContractType {
  Permanent
  Intern
  Contract
  Other
}

enum Role {
  Admin
  Hr
  Manager
  Other
}

model Employee {
  id          Int       @id @default(autoincrement())
  firstName   String?
  lastname    String?
  email       String    @unique
  password    String
  address     String?
  city        String?
  postalCode  String?
  phoneNumber String?
  dateOfBirth DateTime?

  role   Role
  gender Gender?

  employeeInfo        EmployeeInfo?
  createdOrganisation Organisation? @relation("OrganisationCreator")
  teams               Team[]        @relation("EmployeeTeams")
  responsibleTeams    Team[]        @relation("ResponsibleTeams")

  organisationId Int?
  organisation   Organisation? @relation(fields: [organisationId], references: [id], onDelete: Cascade)
}

model Organisation {
  id        Int    @id @default(autoincrement())
  name      String
  address   String
  city      String
  vatNumber String @unique

  employees   Employee[]
  createdById Int        @unique
  createdBy   Employee   @relation("OrganisationCreator", fields: [createdById], references: [id], onDelete: Cascade)
}

model EmployeeInfo {
  id           Int          @id @default(autoincrement())
  hireDate     DateTime
  positon      String
  contractType ContractType
  vacationDays Int          @default(0)

  employeeId Int      @unique
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Team {
  id   Int    @id @default(autoincrement())
  name String

  teamLeadId Int
  teamLead   Employee @relation("ResponsibleTeams", fields: [teamLeadId], references: [id], onDelete: Cascade)

  members Employee[] @relation("EmployeeTeams")
}
